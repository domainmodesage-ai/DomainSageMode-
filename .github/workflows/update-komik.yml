name: Update Komik dari Google Drive

on:
  schedule:
    - cron: "*/1 * * * *" # setiap 1 menit
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync-komik:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl wget

      - name: Sinkronisasi komik
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          GDRIVE_API_KEY: ${{ secrets.GDRIVE_API_KEY }}
        run: |
          set -euo pipefail
          
          KOMIK_JSON_PATH="data/komik.json"
          TMP_JSON="tmp_komik.json"
          ASSETS_DIR="assets1/komik"

          mkdir -p "$ASSETS_DIR"
          cp "$KOMIK_JSON_PATH" "$TMP_JSON"

          list_files() {
            local parent_id=$1
            curl -s "https://www.googleapis.com/drive/v3/files?q='$parent_id'+in+parents&key=$GDRIVE_API_KEY&fields=files(id,name,mimeType)"
          }

          echo "📂 Ambil daftar isi folder utama..."
          root_contents=$(list_files "$GDRIVE_FOLDER_ID")
          folder_count=$(echo "$root_contents" | jq '[.files[] | select(.mimeType=="application/vnd.google-apps.folder")] | length')

          if [ "$folder_count" -eq 0 ]; then
            root_name=$(curl -s "https://www.googleapis.com/drive/v3/files/$GDRIVE_FOLDER_ID?key=$GDRIVE_API_KEY&fields=name" | jq -r '.name')
            folders_json="{\"files\": [{\"id\": \"$GDRIVE_FOLDER_ID\", \"name\": \"$root_name\"}]}"
          else
            folders_json=$(echo "$root_contents" | jq '{files: [.files[] | select(.mimeType=="application/vnd.google-apps.folder")]}')
          fi

          for row in $(echo "$folders_json" | jq -r '.files[] | @base64'); do
            _jq() { echo ${row} | base64 --decode | jq -r ${1}; }
            komik_id=$(_jq '.name')
            komik_drive_id=$(_jq '.id')

            echo "🔍 Proses komik: $komik_id"
            komik_files=$(list_files "$komik_drive_id")

            mkdir -p "$ASSETS_DIR/$komik_id"

            # Ambil cover
            cover_id=$(echo "$komik_files" | jq -r '.files[] | select(.name=="cover.jpg") | .id')
            if [ -n "$cover_id" ] && [ "$cover_id" != "null" ]; then
              wget -q "https://drive.google.com/uc?export=download&id=$cover_id" -O "$ASSETS_DIR/$komik_id/cover.jpg"
              echo "🖼 Cover disimpan."
            fi

            # Ambil chapter
            chapters_json=$(jq -n '[]')
            chapters=$(echo "$komik_files" | jq -r '.files[] | select(.mimeType=="application/vnd.google-apps.folder") | @base64')
            for chap in $chapters; do
              _cjq() { echo ${chap} | base64 --decode | jq -r ${1}; }
              chap_name=$(_cjq '.name')
              chap_id=$(_cjq '.id')

              chapter_dir="$ASSETS_DIR/$komik_id/$chap_name"
              mkdir -p "$chapter_dir"

              images=$(list_files "$chap_id" | jq -r '.files[] | select(.mimeType | startswith("image/")) | @base64')
              for img in $images; do
                _ijq() { echo ${img} | base64 --decode | jq -r ${1}; }
                img_id=$(_ijq '.id')
                img_name=$(_ijq '.name')
                wget -q "https://drive.google.com/uc?export=download&id=$img_id" -O "$chapter_dir/$img_name"
              done

              total_images=$(ls "$chapter_dir" | wc -l)
              chapters_json=$(echo "$chapters_json" | jq \
                --arg judul "Chapter $chap_name" \
                --arg folder "$ASSETS_DIR/$komik_id/$chap_name" \
                --argjson total $total_images \
                '. += [{"judul": $judul, "folder": $folder, "total": $total}]')
              
              echo "✅ Chapter $chap_name selesai ($total_images halaman)."
            done

            # Cek apakah ada komik.json di Drive
            drive_komik_json_id=$(echo "$komik_files" | jq -r '.files[] | select(.name=="komik.json") | .id')
            if [ -n "$drive_komik_json_id" ] && [ "$drive_komik_json_id" != "null" ]; then
              wget -q "https://drive.google.com/uc?export=download&id=$drive_komik_json_id" -O tmp_drive_komik.json
              # Pakai data dari komik.json di Drive, tapi update chapter & lastUpdate
              tmp=$(mktemp)
              jq --argjson ch "$chapters_json" --arg now "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
                '.[0].chapter = $ch | .[0].lastUpdate = $now' tmp_drive_komik.json > tmp_final.json
              drive_data=$(cat tmp_final.json)
              rm tmp_drive_komik.json tmp_final.json
            else
              # Buat data default
              drive_data=$(jq -n \
                --arg id "$komik_id" \
                --arg cover "$ASSETS_DIR/$komik_id/cover.jpg" \
                --arg now "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
                --argjson ch "$chapters_json" \
                '[{"id": $id, "judul": $id, "format": "Manga", "genre": [], "author": "", "artist": "", "status": "Ongoing", "sinopsis": "", "cover": $cover, "lastUpdate": $now, "chapter": $ch}]')
            fi

            # Update atau tambah ke JSON utama
            if jq -e --arg id "$komik_id" '.[] | select(.id == $id)' "$TMP_JSON" >/dev/null; then
              echo "🔄 Update data komik di JSON"
              tmp=$(mktemp)
              jq --arg id "$komik_id" --argjson newdata "$drive_data" \
                'map(if .id == $id then $newdata[0] else . end)' \
                "$TMP_JSON" > "$tmp" && mv "$tmp" "$TMP_JSON"
            else
              echo "🆕 Tambah komik baru ke JSON"
              tmp=$(mktemp)
              jq --argjson newdata "$drive_data" '. + $newdata' "$TMP_JSON" > "$tmp" && mv "$tmp" "$TMP_JSON"
            fi
          done

          mv "$TMP_JSON" "$KOMIK_JSON_PATH"

      - name: Commit & Push perubahan
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Update komik & chapter dari Google Drive" || echo "Tidak ada perubahan"
          git push
