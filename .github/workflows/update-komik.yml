name: Update Komik dari Google Drive

on:
  schedule:
    - cron: "*/5 * * * *"

jobs:
  sync-komik:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Update komik.json otomatis dengan debug
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          GDRIVE_API_KEY: ${{ secrets.GDRIVE_API_KEY }}
        run: |
          set -euo pipefail

          KOMIK_JSON_PATH="data/komik.json"
          TMP_JSON="tmp_komik.json"

          echo "Mulai update komik.json dari Google Drive folder ID: $GDRIVE_FOLDER_ID"

          # Fungsi untuk list folder di Google Drive (folder komik)
          list_folders() {
            curl -s "https://www.googleapis.com/drive/v3/files?q='$GDRIVE_FOLDER_ID'+in+parents+and+mimeType='application/vnd.google-apps.folder'&key=$GDRIVE_API_KEY&fields=files(id,name)"
          }

          # Fungsi untuk list chapter (folder) dalam folder komik
          list_chapters() {
            local parent_id=$1
            curl -s "https://www.googleapis.com/drive/v3/files?q='$parent_id'+in+parents+and+mimeType='application/vnd.google-apps.folder'&key=$GDRIVE_API_KEY&fields=files(id,name)"
          }

          # Fungsi untuk hitung gambar dalam chapter
          count_images() {
            local chapter_id=$1
            # hanya hitung file gambar, abaikan folder
            curl -s "https://www.googleapis.com/drive/v3/files?q='$chapter_id'+in+parents+and mimeType contains 'image/'&key=$GDRIVE_API_KEY&fields=files(id,name)" | jq '.files | length'
          }

          # Mulai proses update
          cp "$KOMIK_JSON_PATH" "$TMP_JSON"

          folders_json=$(list_folders)
          echo "Folder komik terbaca:"
          echo "$folders_json" | jq -r '.files[].name'

          # Loop tiap komik dalam komik.json
          komik_ids=$(jq -r '.[].id' "$TMP_JSON")

          for komik_id in $komik_ids; do
            echo "Proses komik ID: $komik_id"

            # Cari folder komik di Google Drive berdasarkan nama komik_id
            folder_info=$(echo "$folders_json" | jq -r --arg NAME "$komik_id" '.files[] | select(.name == $NAME)')
            if [ -z "$folder_info" ]; then
              echo "⚠️ Folder komik $komik_id tidak ditemukan di Google Drive. Lewati."
              continue
            fi

            folder_id=$(echo "$folder_info" | jq -r '.id')
            echo "Folder ID Google Drive: $folder_id"

            chapters_json=$(list_chapters "$folder_id")
            echo "Daftar chapter di komik $komik_id:"
            echo "$chapters_json" | jq -r '.files[].name'

            total_images=0

            # Hitung semua gambar dari tiap chapter
            chapter_names=$(echo "$chapters_json" | jq -r '.files[].name')
            for chapter_name in $chapter_names; do
              chapter_id=$(echo "$chapters_json" | jq -r --arg NAME "$chapter_name" '.files[] | select(.name == $NAME) | .id')
              count=$(count_images "$chapter_id")
              echo "  Chapter $chapter_name: $count gambar"
              total_images=$((total_images + count))
            done

            echo "Total gambar untuk komik $komik_id: $total_images"

            # Update jumlah gambar di komik.json (field jumlah_gambar)
            jq --arg id "$komik_id" --argjson total "$total_images" \
              'map(if .id == $id then .jumlah_gambar = $total else . end)' \
              "$TMP_JSON" > tmp_update.json && mv tmp_update.json "$TMP_JSON"

            echo "Update komik.json selesai untuk komik $komik_id"
          done

          # Replace file asli dengan yang sudah diperbarui
          mv "$TMP_JSON" "$KOMIK_JSON_PATH"

          echo "Selesai update komik.json otomatis dengan log debug."
