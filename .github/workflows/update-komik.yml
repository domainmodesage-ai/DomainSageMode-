name: Update Komik dari Google Drive

on:
  schedule:
    - cron: "*/5 * * * *" # jalan setiap 5 menit
  # workflow_dispatch: # dinonaktifkan, biar pure otomatis

jobs:
  sync-komik:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl unzip

      - name: Ambil daftar file Google Drive (Debug)
        run: |
          echo "🔍 Mengambil daftar file di folder utama Google Drive..."
          curl -s "https://www.googleapis.com/drive/v3/files?q='${{ secrets.DRIVE_FOLDER_ID }}'+in+parents&key=${{ secrets.DRIVE_API_KEY }}&fields=files(id,name,mimeType)" \
          -o drive_files.json
          cat drive_files.json

      - name: Download & Sinkronisasi Komik (Debug)
        run: |
          mkdir -p assets1/komik

          get_folder_content () {
            local FOLDER_ID=$1
            local DEST_PATH=$2

            echo "📂 Mengambil isi folder: $DEST_PATH"
            curl -s "https://www.googleapis.com/drive/v3/files?q='${FOLDER_ID}'+in+parents&key=${{ secrets.DRIVE_API_KEY }}&fields=files(id,name,mimeType)" \
            -o temp_list.json
            cat temp_list.json

            for row in $(jq -c '.files[]' temp_list.json); do
              FILE_ID=$(echo $row | jq -r '.id')
              FILE_NAME=$(echo $row | jq -r '.name')
              FILE_TYPE=$(echo $row | jq -r '.mimeType')

              if [[ "$FILE_TYPE" == "application/vnd.google-apps.folder" ]]; then
                echo "📁 Folder ditemukan: $FILE_NAME"
                mkdir -p "$DEST_PATH/$FILE_NAME"
                get_folder_content "$FILE_ID" "$DEST_PATH/$FILE_NAME"
              else
                echo "📄 File ditemukan: $FILE_NAME (download)"
                curl -L "https://drive.google.com/uc?export=download&id=${FILE_ID}" -o "$DEST_PATH/$FILE_NAME"
              fi
            done
          }

          get_folder_content "${{ secrets.DRIVE_FOLDER_ID }}" "assets1/komik"

      - name: Update komik.json otomatis (Debug)
        run: |
          echo "🛠 Memperbarui komik.json..."
          NOW=$(date -u +"%Y-%m-%dT%H:%M:%S.000Z")

          for komik_folder in assets1/komik/*; do
            komik_id=$(basename "$komik_folder")
            echo "🔹 Memproses komik: $komik_id"

            if [[ ! -f "$komik_folder/cover.jpg" ]]; then
              echo "⚠️ Komik $komik_id tidak punya cover.jpg"
              continue
            fi

            chapters_json=$(jq -n '[]')
            for chapter_folder in "$komik_folder"/*/; do
              chapter_name=$(basename "$chapter_folder")
              total_images=$(ls "$chapter_folder" | wc -l)
              echo "   ➡️ Chapter: $chapter_name ($total_images gambar)"
              chapters_json=$(echo "$chapters_json" | jq \
                --arg judul "chapter $chapter_name" \
                --arg folder "assets1/komik/$komik_id/$chapter_name" \
                --argjson total $total_images \
                '. += [{"judul": $judul, "folder": $folder, "total": $total}]')
            done

            if jq -e --arg id "$komik_id" '.[] | select(.id == $id)' komik.json > /dev/null; then
              echo "   🔄 Update data komik di komik.json"
              tmp=$(mktemp)
              jq --arg id "$komik_id" \
                 --argjson ch "$chapters_json" \
                 --arg now "$NOW" \
                 'map(if .id == $id then .chapter = $ch | .lastUpdate = $now else . end)' \
                 komik.json > "$tmp" && mv "$tmp" komik.json
            else
              echo "   🆕 Menambahkan komik baru ke komik.json"
              tmp=$(mktemp)
              jq --arg id "$komik_id" \
                 --arg cover "assets1/komik/$komik_id/cover.jpg" \
                 --arg now "$NOW" \
                 --argjson ch "$chapters_json" \
                 '. += [{"id": $id, "judul": $id, "format": "Manga", "genre": [], "author": "", "artist": "", "status": "Ongoing", "sinopsis": "", "cover": $cover, "lastUpdate": $now, "chapter": $ch}]' \
                 komik.json > "$tmp" && mv "$tmp" komik.json
            fi
          done

      - name: Commit & Push perubahan
        run: |
          git config --global user.name "Domain Sage Mode Bot"
          git config --global user.email "bot@domainsagemode.xyz"
          git add .
          git commit -m "Update komik otomatis dari Google Drive" || echo "Tidak ada perubahan"
          git push
