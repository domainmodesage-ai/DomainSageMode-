name: Update Komik dari Google Drive

on:
  schedule:
    - cron: "*/5 * * * *"

jobs:
  sync-komik:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Update komik.json otomatis
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          GDRIVE_API_KEY: ${{ secrets.GDRIVE_API_KEY }}
        run: |
          set -euo pipefail

          KOMIK_JSON_PATH="data/komik.json"
          TMP_JSON="tmp_komik.json"

          cp "$KOMIK_JSON_PATH" "$TMP_JSON"

          echo "📂 Mengambil daftar folder komik dari Google Drive..."
          list_folders() {
            curl -s "https://www.googleapis.com/drive/v3/files?q='$GDRIVE_FOLDER_ID'+in+parents+and+mimeType='application/vnd.google-apps.folder'&key=$GDRIVE_API_KEY&fields=files(id,name)"
          }

          list_chapters() {
            local parent_id=$1
            curl -s "https://www.googleapis.com/drive/v3/files?q='$parent_id'+in+parents+and+mimeType='application/vnd.google-apps.folder'&key=$GDRIVE_API_KEY&fields=files(id,name)"
          }

          count_images() {
            local chapter_id=$1
            curl -s "https://www.googleapis.com/drive/v3/files?q='$chapter_id'+in+parents+and+mimeType+contains+'image/'&key=$GDRIVE_API_KEY&fields=files(id,name)" \
            | jq '.files // [] | length'
          }

          get_drive_file_content() {
            local file_id=$1
            curl -s "https://www.googleapis.com/drive/v3/files/$file_id?alt=media&key=$GDRIVE_API_KEY"
          }

          folders_json=$(list_folders)
          folder_names=$(echo "$folders_json" | jq -r '.files // [] | .[].name')

          for folder_name in $folder_names; do
            echo "🔍 Proses folder: $folder_name"

            exists=$(jq -r --arg id "$folder_name" 'map(select(.id == $id)) | length' "$TMP_JSON")

            folder_id=$(echo "$folders_json" | jq -r --arg NAME "$folder_name" '.files[] | select(.name == $NAME) | .id')
            chapters_json=$(list_chapters "$folder_id")
            chapter_names=$(echo "$chapters_json" | jq -r '.files // [] | .[].name')

            total_images=0
            for chapter_name in $chapter_names; do
              chapter_id=$(echo "$chapters_json" | jq -r --arg NAME "$chapter_name" '.files[] | select(.name == $NAME) | .id')
              count=$(count_images "$chapter_id")
              total_images=$((total_images + count))
            done

            if [ "$exists" -gt 0 ]; then
              # Update data komik lama
              jq --arg id "$folder_name" --argjson total "$total_images" \
                 'map(if .id == $id then .jumlah_gambar = $total | .jumlah_chapter = (.jumlah_chapter + 0) else . end)' \
                 "$TMP_JSON" > tmp_update.json && mv tmp_update.json "$TMP_JSON"
              echo "✅ Update komik lama: $folder_name (total gambar: $total_images)"
            else
              # Cek apakah ada komik.json di Drive untuk komik baru
              komik_json_file=$(curl -s "https://www.googleapis.com/drive/v3/files?q='$folder_id'+in+parents+and+name='komik.json'&key=$GDRIVE_API_KEY&fields=files(id,name)" \
                                | jq -r '.files // [] | .[].id')
              if [ -n "$komik_json_file" ]; then
                komik_metadata=$(get_drive_file_content "$komik_json_file")
                echo "$komik_metadata" | jq '.' > /dev/null || { echo "⚠️ komik.json rusak untuk $folder_name, dilewati."; continue; }
                jq --argjson new "$komik_metadata" '. + [$new]' "$TMP_JSON" > tmp_update.json && mv tmp_update.json "$TMP_JSON"
                echo "➕ Tambah komik baru: $folder_name"
              else
                echo "⚠️ Komik baru $folder_name tidak punya komik.json, dilewati."
              fi
            fi
          done

          mv "$TMP_JSON" "$KOMIK_JSON_PATH"
          echo "🎉 Selesai update komik.json dari Google Drive."
